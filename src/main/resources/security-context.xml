<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:sec="http://www.springframework.org/schema/security"
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- <context:property-placeholder location="classpath:properties/app.properties" />	 -->
	
	<bean id="propertyPlaceholderConfigurer"
      class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
	  <constructor-arg ref="configurationEncryptor" />
	  <property name="location" value="classpath:properties/app.properties" />
	</bean>	
	
	<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
	  <property name="config" ref="environmentVariablesConfiguration" />
	</bean>
	 
	<bean id="environmentVariablesConfiguration"
	      class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
	  <property name="algorithm" value="PBEWithMD5AndDES" />
	  <property name="passwordEnvName" value="DIARY_PASS_VAR" />
	  <!-- for easy development and testing
	   <property name="password" value="<your_pass>" /> -->
	</bean>
	

	<bean id="successHandler" class="com.kverchi.diary.security.AuthSuccessHandler">
	</bean>
	<bean id="failureHandler" class="com.kverchi.diary.security.AuthFailureHandler">
	</bean>
	<sec:http auto-config="false" use-expressions="true" disable-url-rewriting="true">
		<sec:access-denied-handler error-page="/denied"/>
		
		<sec:form-login authentication-failure-handler-ref="failureHandler"
						authentication-success-handler-ref="successHandler"/>
								    
		<sec:csrf token-repository-ref="tokenRepository"/>
		<sec:remember-me/>
	    <sec:logout logout-success-url="/sights/gmap"/>
		<sec:intercept-url pattern="/books/*" access="hasAnyRole('ROLE_TRAVELLER', 'ROLE_ADMIN')" />
		<sec:intercept-url pattern="/posts/*" access="permitAll" />
		<sec:intercept-url pattern="/media/*" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/users/login*" access="isAnonymous()"/>
		<sec:intercept-url pattern="/users/registration*" access="isAnonymous()"/>
		<!-- <sec:intercept-url pattern="/posts/test-me" access="isAnonymous()"/> -->
	</sec:http>
	
	<sec:authentication-manager alias="authenticationManager">
	  <sec:authentication-provider user-service-ref="userDetailsService">
	   <sec:password-encoder ref="passwordEncoder">
				<!-- <salt-source ref="saltSource" /> -->
	   </sec:password-encoder>
	  </sec:authentication-provider>	  
	</sec:authentication-manager>
	
	<bean id="tokenRepository"
		class="org.springframework.security.web.csrf.CookieCsrfTokenRepository">
		<property name="cookieHttpOnly" value="false"/>
	</bean>
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl" depends-on="propertyPlaceholderConfigurer"> 
		<property name="host" value="smtp.gmail.com"/>
		<property name="port" value="587"/>
		<property name="username" value="${adminEmail.username}"/>
		<property name="password" value="${adminEmail.password}"/>
		<property name="javaMailProperties">
		    <props>
	       	      <prop key="mail.smtp.auth">true</prop>
	       	      <prop key="mail.smtp.starttls.enable">true</prop>
	       	</props>
		</property>
	</bean>	
</beans>