<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<context:component-scan base-package="com.kverchi.diary" />
	
	 <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="packagesToScan" value="com.kverchi.diary.domain" />
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      </property>
      <property name="jpaProperties">
         <props>
            <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
         </props>
      </property>
     </bean>
	
	<!--<bean class="java.net.URI" id="dbUrl">
    	<constructor-arg value="${DATABASE_URL}"/>
	</bean>-->
	
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		
		<!-- Local MySQL connection -->
		<!-- 
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/diary" /> 
		<property name="username" value="${db.mysql.username}" />  
        <property name="password" value="${db.mysql.password}" /> 
		-->
		
		<!-- Local Postgresql connection -->
		<!--<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/diary" /> 
		<property name="username" value="${db.postgres.username}" />  
        <property name="password" value="${db.postgres.password}" />-->

		<!-- Heroku Postgresql connetion -->
	 	<!--<property name="driverClassName" value="${database.postgres.driverClassName}"/>
		<property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
    	<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>-->
		<property name="driverClassName" value="${database.postgres.driverClassName}"/>
		<property name="url" value="${JDBC_DATABASE_URL}"/>
		<property name="username" value="${JDBC_DATABASE_USERNAME}"/>
		<property name="password" value="${JDBC_DATABASE_PASSWORD}"/>
    	
    	<property name="maxActive" value="10"/>
	    <property name="maxIdle" value="5"/>
	    <property name="minIdle" value="2"/>
	    <property name="initialSize" value="5"/>
	    <property name="removeAbandoned" value="true"/>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
	
	<!-- <bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory" />
	</bean> -->
	
	<!-- <bean id="hibernate5AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	
		<property name="packagesToScan">
			<array>
				<value>com.kverchi.diary.domain</value>
			</array>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean> -->
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
</beans>